#!/usr/bin/env python
# coding: utf-8

# In[1]:


import pandas as pd
import datetime
import numpy as np
import matplotlib as mp
import matplotlib.pyplot as plt
import os
from prophet import Prophet
import pandas as pd


# In[42]:


time = ['2023-09-01', '2023-09-02','2023-09-03','2023-09-04','2023-09-05','2023-09-06','2023-09-07','2023-09-08','2023-09-09','2023-09-10','2023-09-11','2023-09-12','2023-09-13','2023-09-14','2023-09-15','2023-09-16','2023-09-17','2023-09-18','2023-09-19','2023-09-20','2023-09-21','2023-09-22','2023-09-23','2023-09-24','2023-09-25','2023-09-26','2023-09-27','2023-09-28','2023-09-29','2023-09-30','2023-10-01','2023-10-02','2023-10-03','2023-10-04','2023-10-05','2023-10-06','2023-10-07','2023-10-08','2023-10-09','2023-10-10','2023-10-11','2023-10-12','2023-10-13','2023-10-14','2023-10-15','2023-10-16','2023-10-17','2023-10-18','2023-10-19','2023-10-20','2023-10-21','2023-10-22','2023-10-23','2023-10-24','2023-10-25','2023-10-26','2023-10-27','2023-10-28','2023-10-29','2023-10-30','2023-10-31']
sales = [935167, 781900, 599600,731100 ,770600 ,843300 ,934100 ,979800 ,1133900 ,437296 ,821500 ,997100 ,639200 ,982700 ,855700 ,922500 ,546200 ,873400 ,869760 ,691900 ,1110200 ,1027300 ,993400 ,592400 ,889700 ,933800,998100 ,486000 ,0 ,293400 ,0 ,581400 ,473900 ,600600 ,995600 ,1148900 ,939700 ,457200 ,566200 ,1018300 ,956800 ,769900 ,942800 ,823100 ,458100 ,789500 ,862900 ,955200 ,1003075 ,990500 ,911900 ,478800 ,968100 ,1093300 ,1036500 ,967400 ,901400 ,982800 ,340600 ,847700 ,879500]
df = pd.DataFrame({'ds' : time, 'y' : sales})


# In[43]:


df['ds'] = pd.to_datetime(df['ds'], errors = 'coerce')


# In[45]:


model = Prophet()

model.fit(df)


# In[46]:


df.plot()
plt.show()


# In[47]:


start_date='20231101'
end_date='20231108'
future_7days=pd.date_range(start=start_date, end=end_date, freq='D')
future_7days = pd.DataFrame(future_7days, columns = ['ds'])
future_7days['ds']= pd.to_datetime(future_7days['ds'])


# In[60]:


forecast = model.predict(future_7days) # 향후 11월 1일부터 11월 8일까지의 예측, dataFrame에 저장


# In[61]:


model.plot(forecast)
plt.show()


# In[64]:


f_date = forecast['ds'] #날짜
f_min = forecast['yhat_lower'] #최솟값
f_max = forecast['yhat_upper'] #최댓값
f_mean = forecast['yhat'] #평균값


# In[ ]:




